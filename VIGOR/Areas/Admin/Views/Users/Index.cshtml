@model IEnumerable<ERP.Core.Models.Admin.User>
@using ERP.Core.Models.Admin
@using VIGOR.Models

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var MenuMaster = (List<DynamicMenuBind>)Session["MenuMaster"];
    var MenuItem = (List<DynamicMenuItemBind>)Session["MenuItem"];
    string Create = "none", Edit = "none", Delete = "none";
    if (MenuMaster != null && MenuItem != null && MenuItem.Any(x => x.ModuleDtlUrl.Contains("Users")))
    {
        var NewMenuItem = MenuItem.Where(x => x.ModuleDtlUrl.Contains("Users")).ToList();
        if (NewMenuItem.Any(x => x.ModuleDtlUrl.Contains("Create")))
        {
            Create = "";
        }
        if (NewMenuItem.Any(x => x.ModuleDtlUrl.Contains("Edit")))
        {
            Edit = "";
        }
        if (NewMenuItem.Any(x => x.ModuleDtlUrl.Contains("Delete")))
        {
            Delete = "";
        }
    }

}
<div class="m-portlet m-portlet--mobile">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title">
                <h3 class="m-portlet__head-text">
                    Users
                </h3>
            </div>
        </div>
        <div class="m-portlet__head-tools">
            <ul class="m-portlet__nav">
                @if (LoggedinUser.LoggedInUser.IsAdmin)
                {
                    <li class="m-portlet__nav-item">
                        <a href="@Url.Action("Create", "DepartmentDealsINCommodity", new {Area = "Admin"})" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air">
                            <span>
                                <i class="la la-plus"></i>
                                <span>Deals IN Commodity</span>
                            </span>
                        </a>
                    </li>
                }
                <li class="m-portlet__nav-item">
                    <input data-switch="true" type="checkbox" checked="checked" data-on-text="Active" data-handle-width="10" data-off-text="InActive" data-on-color="success">
                </li>
                <li class="m-portlet__nav-item">
                    <a href="#" class="btn btn-accent m-btn m-btn--custom m-btn--icon m-btn--air">
                        <span style="color: #ffffff">
                            <i class="la la-print"></i>
                            <span>Print</span>
                        </span>
                    </a>
                </li>
                <li class="m-portlet__nav-item"style="display: @Create">
                    <a href="@Url.Action("Create", "Users", new {Area = "Admin"})" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air">
                        <span>
                            <i class="la la-plus"></i>
                            <span>Create New</span>
                        </span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
    <div class="m-portlet__body">
        <table class="table table-striped- table-bordered table-hover table-checkable EmployeeTable" id="">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsActive)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedBy)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ModifiedOn)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IsActive)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedOn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModifiedOn)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { Area = "Admin", id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
    </div>
</div>
@*<div class="modal fade" id="EmployeeModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    </div>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Content/VigorJs/Employee/_CreateOrUpdate.js"></script>
    <script src="~/Content/VigorJs/Employee/Index.js"></script>
    <script src="~/Content/VigorJs/General Grid/GeneralGrid.js"></script>*@

