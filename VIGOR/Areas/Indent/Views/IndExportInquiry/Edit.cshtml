@model ERP.Core.Models.Indenting.IndentExport.IndExportInquiry
@using ERP.Core.Enums
@using ERP.Infrastructure.Repositories.HR
@using ERP.Infrastructure.Repositories.Indenting
@using ERP.Infrastructure.Repositories.Parties
@{
    /**/

    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Int32 counter = 0;
}

<style>
    .tdpading {
        padding-left: 10px !important;
    }

    .decimal {
        text-align: right
    }

    .my-custom-scrollbar {
        /*position: relative;s
        height: 200px;
        overflow: auto;*/
    }

    td {
        padding: 0px !important;
    }

    .table-wrapper-scroll-y {
        display: block;
    }
</style>
<div class="m-demo" data-code-preview="true" data-code-html="true" data-code-js="false">
    <div class="m-demo__preview">
        <div class="row">
            <div class="col-lg-12">
                <div class="m-portlet">
                    @using (Html.BeginForm("Edit", "IndExportInquiry", FormMethod.Post, new { id = "IndExportInquiry" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(a => a.CreatedOn)
                        @Html.HiddenFor(a => a.CreatedBy)
                        @Html.HiddenFor(a => a.InquiryKey)
                        @Html.HiddenFor(a => a.InquiryStatus)
                        @Html.HiddenFor(a => a.CommodityTypeId)
                        @Html.HiddenFor(a => a.DepartmentID)
                        @Html.HiddenFor(a => a.Companyid)
                        @Html.HiddenFor(a => a.InquiryMarket)
                        @Html.HiddenFor(a => a.InquieryStatus)
                        @Html.HiddenFor(a => a.IsClosed)
                        <div class="m-portlet__head">
                            <div class="m-portlet__head-caption">
                                <div class="m-portlet__head-title">
                                    <h3 class="m-portlet__head-text">
                                        Export  Inquiry
                                    </h3>
                                </div>
                            </div>
                            <div class="m-portlet__head-tools">
                                <ul class="m-portlet__nav">
                                    <li class="m-portlet__nav-item">
                                        @*<button  class="btn btn-success m-btn m-btn--custom m-btn--icon m-btn--air" onclick="SubmitIndentExportInquiryForm()">*@
                                        <button class="btn btn-success m-btn m-btn--custom m-btn--icon m-btn--air">
                                            <span>
                                                <i class="fa fa-save"></i>
                                                <span>Update</span>
                                            </span>
                                        </button>
                                    </li>

                                    <li class="m-portlet__nav-item">
                                        <a href="#" class="btn btn-warning m-btn m-btn--custom m-btn--icon m-btn--air">
                                            <span style="color: #ffffff">
                                                <i class="flaticon-cancel"></i>
                                                <span>Cancel</span>
                                            </span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div class="m-portlet__body">
                            <div class="row">

                                <div class="form-group row">
                                    <div class="col-lg-3">
                                        <label>Date:</label>
                                        @Html.TextBoxFor(a => a.InquiryDate, new { @class = "form-control", type = "date", Value = Model.InquiryDate.ToString("yyyy-MM-dd") })
                                        @Html.ValidationMessageFor(model => model.InquiryDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Commodity:</label>
                                        @Html.DropDownListFor(a => a.CommodityTypeId, new SelectList(new CommodityTypeRepository().GetAllCommodityType(), "Id", "Description"), "", new { @class = "form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.CommodityTypeId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Department:</label>
                                        @Html.DropDownListFor(a => a.DepartmentID, new SelectList(new HrDepartmentRepository().GetAllDepartment(), "Id", "title"), "", new { @class = "form-control m-input", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Inquiry NO:</label>
                                        @Html.TextBoxFor(a => a.InquiryKey, new { @class = "form-control", disabled = "disabled" })

                                        @Html.ValidationMessageFor(model => model.InquiryKey, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Existing Customer:</label>
                                        @Html.DropDownListFor(a => a.CustomerId, new SelectList(new FinPartyRepository().GetAllParties(), "Id", "Title"), "", new { @class = "form-control m-select2 search", id = "seller" })
                                        @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Walk in Customer:</label>
                                        @Html.TextBoxFor(a => a.Customer, new { @class = "form-control" })
                                        @*<input class="form-control m-input " id="Customer" name="Customer " placeholder="" type="text">*@
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Program:</label>
                                        @Html.TextBoxFor(a => a.Programm, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Programm, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Type:</label>
                                        <input type="text" value="Export" class="form-control" disabled="disabled" />


                                    </div>
                                    <div class="col-lg-3">
                                        <label>Currency:</label>
                                        @Html.DropDownList("CurrencyID", new SelectList(new CurrencyRepository().GetAllCurrencys(), "Id", "Description"), "", new { @class = "form-control m-select2 search" })
                                        @Html.ValidationMessage("CurrencyID", "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-lg-3">
                                        <label>Payment Term:</label>
                                        @Html.DropDownListFor(a => a.PaymenTermsId, new SelectList(new IndPaymentTermsRepository().GetAllIndPaymentTerms(), "Id", "Description"), "", new { @class = "form-control m-select2 search" })
                                        @Html.ValidationMessageFor(model => model.PaymenTermsId, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-lg-3">
                                        <label>Price Term:</label>
                                        @Html.DropDownListFor(a => a.PriceTermsId, new SelectList(new IndPriceTermsRepository().GetAllIndPriceTerms(), "Id", "Description"), "", new { @class = "form-control m-select2 search" })
                                        @Html.ValidationMessageFor(model => model.PriceTermsId, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-lg-3">
                                        <label>Status:</label>
                                        @* @Html.DropDownList("InquiryStatus", new SelectList(Enumeration.GetAll<ERP.Common.InquieryStatus>(), "Key", "Value","89"), new { @class = "form-control" })*@
                                        @Html.DropDownListFor(o => o.InquiryStatus, Enum.GetValues(typeof(ERP.Common.InquieryStatus)).Cast<ERP.Common.InquieryStatus>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((char)x).ToString() }), new { @class = "form-control", disabled = "disabled" })

                                        @Html.ValidationMessageFor(model => model.InquiryStatus, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Delivery:</label>
                                        @Html.TextAreaFor(a => a.Shipment, new { @class = "form-control m-input" })
                                        @*@Html.TextAreaFor(a => a.Delivery, new { @class = "form-control m-input" })
                                            @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-lg-6">
                                        <label>Destination:</label>
                                        @Html.TextAreaFor(a => a.Destination, new { @class = "form-control m-input" })
                                        @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-3">
                                        <label>Closed On:</label>
                                        @Html.TextBoxFor(a => a.InquiryClosedDate, new { @class = "form-control", type = "date", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.InquiryClosedDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-6">
                                        <label>Remarks:</label>
                                        @Html.TextAreaFor(a => a.Remarks, new { @class = "form-control", cols = "20", rows = "3" })
                                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-lg-2" style="margin-top: 30px;">
                                        <a href="#" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air" onclick="EportInquieryAttechment('@Url.Action("AddAttachments", "IndExportInquiry")')">
                                            <span>
                                                <i class="la la-plus">Attachments </i>
                                            </span>
                                        </a>
                                        @*<button type="button" class="btn btn-info btn-sm">Attachments</button>*@
                                    </div>
                                </div>

                            </div>

                            <div class="col-lg-12">
                                <br />
                                <button type="button" class="btn btn-info m-btn m-btn--custom m-btn--icon m-btn--air" id="btndispatch" onclick="AddDynamicColByPartySelection('@Url.Action("GetFinPartiesList", "IndExportInquiry")')"><i class="flaticon-plus"></i> &nbsp; Add Offer</button>
                            </div>

                            <div id="m_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer ">
                                <div class="row">
                                    <div class="col-sm-12">
                                        <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline detailGrid ExportInquiryTable" id="m_table_1" role="grid" aria-describedby="kt_table_1_info" style="width: 992px;">
                                            <thead style="background-color: #28469c; color: #ffffff">
                                                <tr role="row">
                                                    <th width="100">Commodity</th>
                                                    @*<th width="100">New Commodity</th>*@
                                                    <th width="60">Sale</th>
                                                    <th width="60">Quantity</th>
                                                    <th width="100">Unit of Sale</th>
                                                    <th width="80">Sheet Ref.</th>
                                                    <th width="80">Costing</th>
                                                    <th>Remarks</th>
                                                    @if (ViewBag.CustomerTitleList != null)
                                                    {
                                                        foreach (var item in ViewBag.CustomerTitleList)
                                                        {
                                                            <th>@item.Title</th>
                                                        }
                                                    }
                                                    @*<th width="60" col="TotalValue" summary="sum">Offers</th>*@

                                                    <th width="30"></th>

                                                </tr>
                                            </thead>
                                            <tbody class="tbodyExportInquiry">
                                                @if (Model.IndExportInquiryDetail.Count() > 0)
                                                {
                                                    Int32 j = 0;

                                                    foreach (var item in Model.IndExportInquiryDetail)
                                                    {
                                                        counter = 0;
                                                        <tr role="row" class="odd parentRowGrider">
                                                            <td>
                                                                @Html.DropDownList("det[" + j + "][ProductId]", new SelectList(new ProductRepository().GetAllProduct().Where(a => a.Id > 1), "Id", "Description", item.ProductId), "Select", new { @class = "form-control " })
                                                            </td>
                                                            @*<td>
                                                                    @Html.TextBox("det[" + j + "][NewCommodity]", null, new { @class = "form-control" })
                                                                </td>*@
                                                            <td>
                                                                @Html.TextBox("det[" + j + "][Sale]", null, new { @class = "form-control", @Value = item.SaleContractIssued })
                                                            </td>
                                                            <td>
                                                                @Html.TextBox("det[" + j + "][Quantity]", null, new { @class = "form-control", type = "number", @Value = item.Quantity })
                                                            </td>
                                                            <td>
                                                                @Html.DropDownList("det[" + j + "][UosId]", new SelectList(new UnitOfSaleRepository().GetAllUnitOfSales(), "Id", "Description", item.UosId), "Select", new { @class = "form-control " })
                                                            </td>
                                                            <td>
                                                                @Html.TextBox("det[" + j + "][CostingSheetRef]", null, new { @class = "form-control", @Value = item.CostingSheetRef })
                                                            </td>
                                                            <td>
                                                                @Html.TextBox("det[" + j + "][CostingPrice]", null, new { @class = "form-control", @Value = item.CostingPrice })
                                                            </td>
                                                            <td>   @Html.TextBox("det[" + j + "][Remarks]", null, new { @class = "form-control", @Value = item.InquiryLineItemRemarks })</td>
                                                            @foreach (var exportInquiryOffer in Model.IndExportInquiryOffer.Where(x => x.InquiryDetailNo == item.InquiryDetailNo).ToList())
                                                            {
                                                                counter = counter + 1;
                                                                <td>
                                                                    @Html.TextBox("det[" + j + "][OfferCustomerId" + counter + "]", null, new { @class = "form-control", @Value = exportInquiryOffer.CustomerId, @type = "hidden" })
                                                                    @Html.TextBox("det[" + j + "][OfferAmount" + counter + "]", null, new { @class = "form-control", @Value = exportInquiryOffer.OfferedRate })
                                                                </td>
                                                                /**/
                                                            }

                                                        </tr>
                                                        j = j + 1;
                                                    }
                                                }
                                                else
                                                {
                                                    <tr role="row" class="odd parentRowGrider">
                                                        <td>
                                                            @Html.DropDownList("det[0][ProductId]", new SelectList(new ProductRepository().GetAllProduct().Where(a => a.Id > 1), "Id", "Description"), "", new { @class = "form-control " })
                                                        </td>
                                                        @*<td>
                                                                @Html.TextBox("det[0][NewCommodity]", null, new { @class = "form-control" })
                                                            </td>*@
                                                        <td>
                                                            @Html.TextBox("det[0][Sale]", null, new { @class = "form-control" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("det[0][Quantity]", null, new { @class = "form-control", type = "number" })
                                                        </td>
                                                        <td>
                                                            @Html.DropDownList("det[0][UosId]", new SelectList(new UnitOfSaleRepository().GetAllUnitOfSales(), "Id", "Description"), "", new { @class = "form-control " })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("det[0][CostingSheetRef]", null, new { @class = "form-control" })
                                                        </td>
                                                        <td>
                                                            @Html.TextBox("det[0][CostingPrice]", null, new { @class = "form-control" })
                                                        </td>
                                                        <td>   @Html.TextBox("det[0][Remarks]", null, new { @class = "form-control" })</td>
                                                        @*<td>   @Html.TextBox("det[0][TotalValue]", null, new { @class = "form-control" })</td>*@
                                                    </tr>
                                                }

                                            </tbody>

                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="IndentLookUpModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
</div>
<div class="modal fade" id="FinPartyModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
</div>
<script src="~/Content/VigorJs/IndExportInquiry/_CreateOrUpdate.js"></script>
<script>
    var CounterVal = 0;
    var dt = -1;
    var inc = 0;
    var SelectPartySetInGrid = function (ele) {
        if (inc == 0) {
            CounterVal = '@counter';
            inc++;
        }
        CounterVal = parseInt(CounterVal) + 1;
        var foundPartyIdAttr = $(ele).attr('id');
        var partyTitle = $('#' + foundPartyIdAttr).children().eq(0).text();
        $('#FinPartyModal').modal('hide');
        $('.ExportInquiryTable').find('tr').each(function () {

            $(this).find('th').eq(-2).after('<th>' + partyTitle + '</th>');
            $(this).find('td').eq(-2).after('<td><input type="number" name="det[' + dt + '][OfferAmount' + CounterVal + ']" class="form-control"><input type="hidden" name="det[' + dt + '][OfferCustomerId' + CounterVal + ']" value="' + foundPartyIdAttr + '"></td>');
            $('.summary').children().eq(-2).html(' ');
            dt++;
        });
        dt = -1;
    };
</script>
