@using ERP.Infrastructure.Repositories.Indenting
@using ERP.Infrastructure.Repositories.Indenting.Inspection
@model ERP.Core.Models.Indenting.Inspection.YarnInspection

@{
    Layout = null;
}
<div class="modal-dialog modal-dialog-centered " style="width: 95% !important; max-width: 10000px !important;">
<div class="modal-content">
<div class="m-portlet" style="margin-bottom: 0px;">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title">
                <h3 class="m-portlet__head-text">
                    Yarn Inspection
                </h3>
               
            </div>
        </div>
        <div class="m-portlet__head-tools">
            <ul class="m-portlet__nav">
                <li class="m-portlet__nav-item">
                    <button class="btn btn-success" onclick="SubmitYarnInspection()">
                        <span>
                            <i class="fa fa-save"></i>
                            <span>Save</span>
                        </span>
                    </button>
                </li>
                <li class="m-portlet__nav-item">
                    <a href="#" class="btn btn-warning m-btn m-btn--custom m-btn--icon m-btn--air" data-dismiss="modal">
                        <span style="color: #ffffff">
                            <i class="flaticon-cancel"></i>
                            <span>Cancel</span>
                        </span>
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>

<div class="row">
<div class="col-lg-12">
@using (Html.BeginForm(null, null, FormMethod.Post, new {id = "YarnInspectionForm"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    if (ViewBag.Title != "Create")
    {

        @Html.HiddenFor(a => a.Id)
        @Html.HiddenFor(a => a.IndentKey)
        @Html.HiddenFor(a => a.CreatedOn)
    }
    <div class="m-portlet">


    <div class="m-portlet__body">
    <div class="row">
    <div class="col-md-3">
        <div class="form-group row">
            <div class="col-lg-6">
                <label>Serial No:</label>
                @Html.TextBoxFor(a => a.InspectionSerialID, new {@class = "form-control ",@readonly= "readonly" })
                @Html.ValidationMessageFor(model => model.InspectionSerialID, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-6">
                <label>Register No:</label>
                @Html.TextBoxFor(a => a.RegisterNo, new {@class = "form-control ", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RegisterNo, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-6">
                <label>Date:</label>
                @Html.TextBoxFor(a => a.InspectionDate, new {@class = "form-control ", type = "Date", @readonly = "readonly", Value = Model.InspectionDate.ToString("yyyy-MM-dd")})
                @Html.ValidationMessageFor(model => model.InspectionDate, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-6">
                <label>TM/TPI:</label>
                @Html.TextBoxFor(a => a.tm, new {@class = "form-control ", type = "number"})
                @Html.ValidationMessageFor(model => model.tm, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <label>Type:</label>
                @Html.DropDownListFor(a => a.InspReportTypeId, new SelectList(new YarnInspectionReportTypeRepository().GetAllYarnInspectionReportTypes(), "Id", "Description"), "", new {@class = "form-control "})
                @Html.ValidationMessageFor(model => model.InspReportTypeId, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <label>Unit No:</label>
                @Html.TextBoxFor(a => a.MillUnit, new {@class = "form-control "})
                @Html.ValidationMessageFor(model => model.MillUnit, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-4">
                <br/>
                <a href="#" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air" onclick="OpenLookUpContractsModal('@Url.Action("LookUpContracts", "IndentDomestic")')">
                    <span>
                        <i class="la la-plus"></i>
                    </span>
                </a>
            </div>
            <div class="col-lg-8">
                <label>Select Indent:</label>
                @Html.HiddenFor(a => a.IndentId, new {id = "IndentId"})
                @Html.TextBoxFor(a => a.IndentKey, new {@class = "form-control", id = "IndentKey", @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.IndentId, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <label>Seller:</label>
                @Html.HiddenFor(a => a.CustomerIDasSeller, new {id = "CustomerIDasSeller"})
                @Html.TextBoxFor(a => a.CustomerSellerName, new {@class = "form-control", id = "CustomerSellerName", @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.CustomerSellerName, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <label>Buyer:</label>
                @Html.HiddenFor(a => a.CustomerIDasBuyer, new {id = "CustomerIDasBuyer"})
                @Html.TextBoxFor(a => a.CustomerBuyerName, new {@class = "form-control", id = "CustomerBuyerName", @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.CustomerBuyerName, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <label>Commodity:</label>
                @Html.HiddenFor(a => a.CommodityId, new {id = "CommodityId"})
                @Html.TextBox("Commodity", Model.Product.Description, new {@class = "form-control", id = "Commodity", @readonly = "readonly"})
                @Html.ValidationMessageFor(model => model.CommodityId, "", new {@class = "text-danger"})
            </div>
            <div class="col-lg-12">
                <div id="m_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer" readonly>
                    <div class="row">
                        <div class="col-sm-12">
                            <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline " id="m_table_1" role="grid" aria-describedby="kt_table_1_info" style="width: 992px;">
                                <thead style="background-color: #28469c; color: #ffffff">
                                <tr>
                                    <th width="20">Shipment</th>
                                    <th width="">Quantity</th>
                                    <th width="">Commodity</th>
                                </tr>
                                </thead>
                                <tbody>
                                <tr role="row" class="odd"></tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    @*<div class="row"><div class="col-sm-12 col-md-5"><div class="dataTables_info" id="kt_table_1_info" role="status" aria-live="polite">Showing 1 to 10 of 50 entries</div></div><div class="col-sm-12 col-md-7 dataTables_pager"><div class="dataTables_length" id="kt_table_1_length"><label>Display <select name="kt_table_1_length" aria-controls="kt_table_1" class="custom-select custom-select-sm form-control form-control-sm"><option value="5">5</option><option value="10">10</option><option value="25">25</option><option value="50">50</option></select></label></div><div class="dataTables_paginate paging_simple_numbers" id="kt_table_1_paginate"><ul class="pagination"><li class="paginate_button page-item previous disabled" id="kt_table_1_previous"><a href="#" aria-controls="kt_table_1" data-dt-idx="0" tabindex="0" class="page-link"><i class="la la-angle-left"></i></a></li><li class="paginate_button page-item active"><a href="#" aria-controls="kt_table_1" data-dt-idx="1" tabindex="0" class="page-link">1</a></li><li class="paginate_button page-item "><a href="#" aria-controls="kt_table_1" data-dt-idx="2" tabindex="0" class="page-link">2</a></li><li class="paginate_button page-item "><a href="#" aria-controls="kt_table_1" data-dt-idx="3" tabindex="0" class="page-link">3</a></li><li class="paginate_button page-item "><a href="#" aria-controls="kt_table_1" data-dt-idx="4" tabindex="0" class="page-link">4</a></li><li class="paginate_button page-item "><a href="#" aria-controls="kt_table_1" data-dt-idx="5" tabindex="0" class="page-link">5</a></li><li class="paginate_button page-item next" id="kt_table_1_next"><a href="#" aria-controls="kt_table_1" data-dt-idx="6" tabindex="0" class="page-link"><i class="la la-angle-right"></i></a></li></ul></div></div></div>*@
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-9">
    <div>
    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active " data-toggle="tab" href="#m_tabs_1_11">Inspection Results</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " data-toggle="tab" href="#m_tabs_1_12">Attachments</a>
        </li>
    </ul>
    <div class="tab-content">
    <div class="tab-pane active " id="m_tabs_1_11" role="tabpanel">
    <div class="row">
    <div class="col-md-5">
        <div class="m-section__content">
            <table class="table">
                <tbody>
                <tr>
                    <td colspan="2">Result Input:</td>
                    <td colspan="2">
                        @Html.DropDownListFor(a => a.ResultInputType, new SelectList(new ProductRepository().GetAllProduct(), "Id", "Description"), "", new {@class = "form-control", disabled = "disabled"})
                        @Html.ValidationMessageFor(model => model.ResultInputType, "", new {@class = "text-danger"})
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <th>Ring/TFO</th>
                    <th>A/Cone</th>
                    <th>Packing</th>
                </tr>
                <tr>
                    <td width="60">Act. Count</td>
                    <td>@Html.TextBoxFor(a => a.RingActualCount, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeActualCount, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedActualCount, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="70">C.V% Count</td>
                    <td> @Html.TextBoxFor(a => a.RingCv, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeCV, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedCv, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">STR</td>
                    <td> @Html.TextBoxFor(a => a.RingStr, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeStr, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedStr, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">C.V% STR</td>
                    <td> @Html.TextBoxFor(a => a.RingCvStr, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.aconeCvStr, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedCvStr, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">CLSP</td>
                    <td> @Html.TextBoxFor(a => a.RingClsp, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeClsp, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedClsp, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">RKM</td>
                    <td> @Html.TextBoxFor(a => a.RingRkm, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeRkm, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedRkm, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">U%</td>
                    <td> @Html.TextBoxFor(a => a.RingU, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeU, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedU, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">Thin</td>
                    <td> @Html.TextBoxFor(a => a.RingThin, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeThin, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedThin, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">Thicks</td>
                    <td> @Html.TextBoxFor(a => a.RingThick, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeThick, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedThick, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">Neps</td>
                    <td> @Html.TextBoxFor(a => a.RingNeps, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeNeps, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedNeps, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">IPI Value</td>
                    <td> @Html.TextBoxFor(a => a.RingIPI, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeIPI, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedIPI, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="70">C.V B% of U%</td>
                    <td> @Html.TextBoxFor(a => a.RingCvbOfU, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeCvbOfU, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedCvbOfU, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">Hairiess</td>
                    <td> @Html.TextBoxFor(a => a.RingHairiness, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeHairiness, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedHairiness, new {@class = "form-control ", type = "number"})</td>
                </tr>
                <tr>
                    <td width="60">Elongation</td>
                    <td> @Html.TextBoxFor(a => a.RingElongation, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.AconeElongation, new {@class = "form-control ", type = "number"})</td>
                    <td>@Html.TextBoxFor(a => a.PackedElongation, new {@class = "form-control ", type = "number"})</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="col-md-4">
        <div class="m-section__content">
            <table class="table">
                <tbody>
                <tr>
                    <td width="70">Lot No:</td>
                    <td>
                        @Html.TextBoxFor(a => a.Lotno, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="70">Prod Start:</td>
                    <td>
                        @Html.TextBoxFor(a => a.ProductionStartDate, new {@class = "form-control ", type = "date", Value = Model.ProductionStartDate.ToString("yyyy-MM-dd")})
                    </td>
                </tr>
                <tr>
                    <td width="70">Prod End:</td>
                    <td>
                        @Html.TextBoxFor(a => a.ProductionDate, new {@class = "form-control ", type = "date", Value = Model.ProductionDate.ToString("yyyy-MM-dd")})
                    </td>
                </tr>
                <tr>
                    <td width="70">Shade:</td>
                    <td>
                        @Html.TextBoxFor(a => a.Shade, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <td width="80">P.Cone Color:</td>
                    <td>
                        @Html.TextBoxFor(a => a.PConeColour, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <td width="70">B/Strips:</td>
                    <td>
                        @Html.TextBoxFor(a => a.bstrips, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <td width="70">Moisture:</td>
                    <td>
                        @Html.TextBoxFor(a => a.moisture, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <td width="90">Avg Bag Weigh:</td>
                    <td>
                        @Html.TextBoxFor(a => a.AvgBagWeight, new {@class = "form-control ", type = "number"})

                    </td>
                </tr>
                <tr>
                    <td width="70">Yarn Lengtht:</td>
                    <td>
                        @Html.TextBoxFor(a => a.yarnlength, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <th width="100">Checked Ratio:</th>
                    <td></td>
                </tr>
                <tr>
                    <td width="70">Polyester %:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CrPolyester, new {@class = "form-control "})

                    </td>
                </tr>
                <tr>
                    <td width="70">Cotton %:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CrCotton, new {@class = "form-control "})

                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <div class="m-section__content">
            <table class="table">
                <tbody>
                <tr>
                    <th>Polyester:</th>
                    <td></td>
                </tr>
                <tr>
                    <td width="70">Fiber:</td>
                    <td>
                        @Html.TextBoxFor(a => a.PolyFiber, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="70">Length:</td>
                    <td>
                        @Html.TextBoxFor(a => a.PolyLength, new {@class = "form-control ", type = "number"})
                    </td>
                </tr>
                <tr>
                    <td width="70">Denier:</td>
                    <td>
                        @Html.TextBoxFor(a => a.PolyDenier, new {@class = "form-control ", type = "number"})
                    </td>
                </tr>
                <tr>
                    <td width="70">Colour:</td>
                    <td>
                        @Html.TextBoxFor(a => a.PolyColour, new {@class = "form-control "})
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="col-md-3">
        <div class="m-section__content">
            <table class="table">
                <tbody>
                <tr>
                    <th>Cotton:</th>
                    <td></td>
                </tr>
                <tr>
                    <td width="30">Cotton:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonLots, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">Area:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonArea, new {@class = "form-control "})
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <div class="m-section__content">
            <table class="table">
                <tbody>
                <tr>
                    <td width="30">S.Length:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonSlength, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">UR:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonUr, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">FFI:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonFFi, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">Strength:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonStrength, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">Mic:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonMic, new {@class = "form-control ", type = "number"})
                    </td>
                </tr>
                <tr>
                    <td width="60">Mic Range:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonMicRange, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">Grade:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonGrade, new {@class = "form-control"})
                    </td>
                </tr>
                <tr>
                    <td width="30">LOts:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonLots, new {@class = "form-control ", type = "number"})
                    </td>
                </tr>
                <tr>
                    <td width="30">Colour:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonColour, new {@class = "form-control "})
                    </td>
                </tr>
                <tr>
                    <td width="30">Trash:</td>
                    <td>
                        @Html.TextBoxFor(a => a.CottonTrash, new {@class = "form-control ", type = "number"})
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
        <strong>Uster Settings</strong>
        <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline detailGrid" id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
            <thead style="background-color: #28469c; color: #ffffff">
            <tr role="row">
                <th width="40">Setting</th>
                <th width="">Values</th>
                <th width="10"></th>
            </tr>
            </thead>
            <tbody>
            @if (Model.YarnInspectionsUsterSetting.Count > 0)
            {
                Int32 j = 0;
                foreach (var item in Model.YarnInspectionsUsterSetting)
                {
                    <tr role="row" class="odd">
                        <td class="sorting_1">
                            @Html.DropDownList("det[" + j + "][Id]", new SelectList(new YarnInspUstersRepository().GetAllYarnInspUsters(), "Id", "ResultTypeDescription", item.Id), "", new {@class = "form-control"})
                        </td>
                        <td class="sorting_1">
                            @Html.TextBox("det[" + j + "][value]", "", new {@class = "form-control", type = "number", @Value = item.value})
                        </td>
                    </tr>
                    j++;
                }
            }
            else
            {
                <tr>
                    <td>
                        @Html.DropDownList("det[0][Id]", new SelectList(new YarnInspUstersRepository().GetAllYarnInspUsters(), "Id", "ResultTypeDescription"), "", new {@class = "form-control"})
                    </td>
                    <td>
                        @Html.TextBox("det[0][value]", "", new {@class = "form-control", type = "number"})
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <strong>Final Remarks By Quality Control</strong>
            <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline " id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
                <thead style="background-color: #28469c; color: #ffffff">
                <tr role="row">
                    <th width="">Inspected By</th>
                    <th width="">Remarks</th>
                </tr>
                </thead>
                <tbody>
                <tr role="row" class="odd">
                    <td class="sorting_1">
                        @Html.DropDownListFor(a => a.QcInspectorID, new SelectList(new QcInspectorRepository().GetAllQcInspector(), "Id", "FullName"), "", new {@class = "form-control "})
                    </td>
                    <td class="sorting_1">
                        @Html.DropDownListFor(a => a.YarnInsPectionGradeId, new SelectList(new YarnInspectionGradeRepository().GetAllYarnInspectionGrades(), "Id", "Description"), "", new {@class = "form-control "})
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
    </div>
    <div class="tab-pane" id="m_tabs_1_12" role="tabpanel">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline detailGrid" id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
                    <thead style="background-color: #28469c; color: #ffffff">
                    <tr role="row">
                        <th width="">Description</th>
                        <th width="">Attachments</th>
                        <th width="10"></th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (Model.YarnInspectionAttachments.Count > 0)
                    {
                        Int32 j = 0;
                        foreach (var item in Model.YarnInspectionAttachments)
                        {
                            <tr role="row" class="odd">
                                <td class="sorting_1">
                                    @Html.TextBox("det[" + j + "][FileDescription]", "", new {@class = "form-control", @Value = item.FileDescription})
                                </td>
                                <td class="sorting_1">
                                    @Html.TextBox("files", "", new {@class = "form-control", id = "file", @type = "file"})
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.FileName))
                                    {
                                        <a href="~/File/@item.">Download</a>}
                                </td>
                            </tr>
                            j++;
                        }
                    }
                    else
                    {
                        <tr role="row" class="odd">
                            <td class="sorting_1">
                                @Html.TextBox("det[0][FileDescription]", "", new {@class = "form-control"})
                            </td>
                            <td class="sorting_1">
                                @Html.TextBox("files", "", new {@class = "form-control", id = "file", @type = "file"})
                            </td>
                        </tr>
                    }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
}
</div>
</div>
</div>
</div>
<div class="modal fade" id="IndentLookUpModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
</div>
<script src="~/Content/VigorJs/IndentDomestic/_CreateOrUpdate.js"></script>

@*@using ERP.Infrastructure.Repositories.Indenting
        @using ERP.Infrastructure.Repositories.Indenting.Inspection
        @model ERP.Core.Models.Indenting.Inspection.YarnInspection

        @{
            Layout = null;
        }
        <div class="modal-dialog modal-dialog-centered " style="width: 95% !important; max-width: 10000px !important;">
        <div class="modal-content">
        <div class="row">
            <div class="col-lg-12">
                @using (Html.BeginForm("Edit", "YarnInspection", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    if (ViewBag.Title != "Create")
                    {

                        @Html.HiddenFor(a => a.Id)
                        @Html.HiddenFor(a => a.IndentKey)
                        @Html.HiddenFor(a => a.CreatedOn)
                    }
                    <div class="m-portlet">
                        <div class="m-portlet__head">
                            <div class="m-portlet__head-caption">
                                <div class="m-portlet__head-title">
                                    <h3 class="m-portlet__head-text">
                                        Yarn Inspection
                                    </h3>
                                </div>
                            </div>
                            <div class="m-portlet__head-tools">
                                <ul class="m-portlet__nav">
                                    <li class="m-portlet__nav-item">
                                        <button class="btn btn-success m-btn m-btn--custom m-btn--icon m-btn--air">
                                            <span>
                                                <i class="fa fa-save"></i>
                                                <span>Save</span>
                                            </span>
                                        </button>
                                    </li>
                                    <li class="m-portlet__nav-item">
                                        <a href="#" class="btn btn-warning m-btn m-btn--custom m-btn--icon m-btn--air" data-dismiss="modal">
                                            <span style="color: #ffffff">
                                                <i class="flaticon-cancel"></i>
                                                <span>Cancel</span>
                                            </span>
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>

                        <div class="m-portlet__body">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group row">
                                        <div class="col-lg-6">
                                            <label>Serial No:</label>
                                            @Html.TextBoxFor(a => a.InspectionSerialID, new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.InspectionSerialID, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-6">
                                            <label>Register No:</label>
                                            @Html.TextBoxFor(a => a.RegisterNo, new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.RegisterNo, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-6">
                                            <label>Date:</label>
                                            @Html.TextBoxFor(a => a.InspectionDate, new { @class = "form-control ", type = "Date", Value = Model.InspectionDate.ToString("yyyy-MM-dd") })
                                            @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-6">
                                            <label>TM/TPI:</label>
                                            @Html.TextBoxFor(a => a.tm, new { @class = "form-control ", type = "number" })
                                            @Html.ValidationMessageFor(model => model.tm, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <label>Type:</label>
                                            @Html.DropDownListFor(a => a.InspReportTypeId, new SelectList(new YarnInspectionReportTypeRepository().GetAllYarnInspectionReportTypes(), "Id", "Description"), "", new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.InspReportTypeId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <label>Unit No:</label>
                                            @Html.TextBoxFor(a => a.MillUnit, new { @class = "form-control " })
                                            @Html.ValidationMessageFor(model => model.MillUnit, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-4">
                                            <br />
                                            <a href="#" class="btn btn-primary m-btn m-btn--custom m-btn--icon m-btn--air" onclick="OpenLookUpContractsModal('@Url.Action("LookUpContracts", "IndentDomestic")')">
                                                <span>
                                                    <i class="la la-plus"></i>
                                                </span>
                                            </a>
                                        </div>
                                        <div class="col-lg-8">
                                            <label>Select Indent:</label>
                                            @Html.HiddenFor(a => a.IndentId, new { id = "IndentId" })
                                            @Html.TextBoxFor(a => a.IndentKey, new { @class = "form-control", id = "IndentKey", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.IndentId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <label>Seller:</label>
                                            @Html.HiddenFor(a => a.CustomerIDasSeller, new { id = "CustomerIDasSeller" })
                                            @Html.TextBoxFor(a => a.CustomerSellerName, new { @class = "form-control", id = "CustomerSellerName", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.CustomerSellerName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <label>Buyer:</label>
                                            @Html.HiddenFor(a => a.CustomerIDasBuyer, new { id = "CustomerIDasBuyer" })
                                            @Html.TextBoxFor(a => a.CustomerBuyerName, new { @class = "form-control", id = "CustomerBuyerName", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.CustomerBuyerName, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <label>Commodity:</label>
                                            @Html.HiddenFor(a => a.CommodityId, new { id = "CommodityId" })
                                            @Html.TextBox("Commodity", Model.Product.Description, new { @class = "form-control", id = "Commodity", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(model => model.CommodityId, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-lg-12">
                                            <div id="m_table_1_wrapper" class="dataTables_wrapper dt-bootstrap4 no-footer" readonly>
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline " id="m_table_1" role="grid" aria-describedby="kt_table_1_info" style="width: 992px;">
                                                            <thead style="background-color: #28469c; color: #ffffff">
                                                                <tr>
                                                                    <th width="20">Shipment</th>
                                                                    <th width="">Quantity</th>
                                                                    <th width="">Commodity</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <tr role="row" class="odd"></tr>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
    <div class="col-md-9">
        <div>
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active " data-toggle="tab" href="#m_tabs_1_11">Inspection Results</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link " data-toggle="tab" href="#m_tabs_1_12">Attachments</a>
                </li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active " id="m_tabs_1_11" role="tabpanel">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="m-section__content">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td colspan="2">Result Input:</td>
                                            <td colspan="2">
                                                @Html.DropDownListFor(a => a.ResultInputType, new SelectList(new ProductRepository().GetAllProduct(), "Id", "Description"), "", new { @class = "form-control", disabled = "disabled" })
                                                @Html.ValidationMessageFor(model => model.ResultInputType, "", new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td></td>
                                            <th>Ring/TFO</th>
                                            <th>A/Cone</th>
                                            <th>Packing</th>
                                        </tr>
                                        <tr>
                                            <td width="60">Act. Count</td>
                                            <td>@Html.TextBoxFor(a => a.RingActualCount, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeActualCount, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedActualCount, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="70">C.V% Count</td>
                                            <td> @Html.TextBoxFor(a => a.RingCv, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeCV, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedCv, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">STR</td>
                                            <td> @Html.TextBoxFor(a => a.RingStr, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeStr, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedStr, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">C.V% STR</td>
                                            <td> @Html.TextBoxFor(a => a.RingCvStr, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.aconeCvStr, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedCvStr, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">CLSP</td>
                                            <td> @Html.TextBoxFor(a => a.RingClsp, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeClsp, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedClsp, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">RKM</td>
                                            <td> @Html.TextBoxFor(a => a.RingRkm, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeRkm, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedRkm, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">U%</td>
                                            <td> @Html.TextBoxFor(a => a.RingU, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeU, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedU, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">Thin</td>
                                            <td> @Html.TextBoxFor(a => a.RingThin, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeThin, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedThin, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">Thicks</td>
                                            <td> @Html.TextBoxFor(a => a.RingThick, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeThick, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedThick, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">Neps</td>
                                            <td> @Html.TextBoxFor(a => a.RingNeps, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeNeps, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedNeps, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">IPI Value</td>
                                            <td> @Html.TextBoxFor(a => a.RingIPI, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeIPI, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedIPI, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="70">C.V B% of U%</td>
                                            <td> @Html.TextBoxFor(a => a.RingCvbOfU, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeCvbOfU, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedCvbOfU, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">Hairiess</td>
                                            <td> @Html.TextBoxFor(a => a.RingHairiness, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeHairiness, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedHairiness, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                        <tr>
                                            <td width="60">Elongation</td>
                                            <td> @Html.TextBoxFor(a => a.RingElongation, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.AconeElongation, new { @class = "form-control ", type = "number" })</td>
                                            <td>@Html.TextBoxFor(a => a.PackedElongation, new { @class = "form-control ", type = "number" })</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="m-section__content">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td width="70">Lot No:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.Lotno, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Prod Start:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.ProductionStartDate, new { @class = "form-control ", type = "date", Value = Model.ProductionStartDate.ToString("yyyy-MM-dd") })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Prod End:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.ProductionDate, new { @class = "form-control ", type = "date", Value = Model.ProductionDate.ToString("yyyy-MM-dd") })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Shade:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.Shade, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="80">P.Cone Color:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.PConeColour, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">B/Strips:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.bstrips, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Moisture:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.moisture, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="90">Avg Bag Weigh:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.AvgBagWeight, new { @class = "form-control ", type = "number" })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Yarn Lengtht:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.yarnlength, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <th width="100">Checked Ratio:</th>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td width="70">Polyester %:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CrPolyester, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Cotton %:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CrCotton, new { @class = "form-control " })

                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="m-section__content">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th>Polyester:</th>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td width="70">Fiber:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.PolyFiber, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Length:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.PolyLength, new { @class = "form-control ", type = "number" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Denier:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.PolyDenier, new { @class = "form-control ", type = "number" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="70">Colour:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.PolyColour, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="m-section__content">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th>Cotton:</th>
                                            <td></td>
                                        </tr>
                                        <tr>
                                            <td width="30">Cotton:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonLots, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Area:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonArea, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="m-section__content">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td width="30">S.Length:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonSlength, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">UR:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonUr, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">FFI:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonFFi, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Strength:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonStrength, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Mic:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonMic, new { @class = "form-control ", type = "number" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="60">Mic Range:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonMicRange, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Grade:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonGrade, new { @class = "form-control" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">LOts:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonLots, new { @class = "form-control ", type = "number" })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Colour:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonColour, new { @class = "form-control " })
                                            </td>
                                        </tr>
                                        <tr>
                                            <td width="30">Trash:</td>
                                            <td>
                                                @Html.TextBoxFor(a => a.CottonTrash, new { @class = "form-control ", type = "number" })
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <strong>Uster Settings</strong>
                            <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline detailGrid" id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
                                <thead style="background-color: #28469c; color: #ffffff">
                                    <tr role="row">
                                        <th width="40">Setting</th>
                                        <th width="">Values</th>
                                        <th width="10"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.YarnInspectionsUsterSetting.Count > 0)
                                    {
                                        Int32 j = 0;
                                        foreach (var item in Model.YarnInspectionsUsterSetting)
                                        {
                                            <tr role="row" class="odd">
                                                <td class="sorting_1">
                                                    @Html.DropDownList("det[" + j + "][Id]", new SelectList(new YarnInspUstersRepository().GetAllYarnInspUsters(), "Id", "ResultTypeDescription", item.Id), "", new { @class = "form-control" })
                                                </td>
                                                <td class="sorting_1">
                                                    @Html.TextBox("det[" + j + "][value]", "", new { @class = "form-control", type = "number", @Value = item.value })
                                                </td>
                                            </tr>
                                            j++;
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td>
                                                @Html.DropDownList("det[0][Id]", new SelectList(new YarnInspUstersRepository().GetAllYarnInspUsters(), "Id", "ResultTypeDescription"), "", new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.TextBox("det[0][value]", "", new { @class = "form-control", type = "number" })
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <strong>Final Remarks By Quality Control</strong>
                            <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline " id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
                                <thead style="background-color: #28469c; color: #ffffff">
                                    <tr role="row">
                                        <th width="">Inspected By</th>
                                        <th width="">Remarks</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr role="row" class="odd">
                                        <td class="sorting_1">
                                            @Html.DropDownListFor(a => a.QcInspectorID, new SelectList(new QcInspectorRepository().GetAllQcInspector(), "Id", "FullName"), "", new { @class = "form-control " })
                                        </td>
                                        <td class="sorting_1">
                                            @Html.DropDownListFor(a => a.YarnInsPectionGradeId, new SelectList(new YarnInspectionGradeRepository().GetAllYarnInspectionGrades(), "Id", "Description"), "", new { @class = "form-control " })
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="m_tabs_1_12" role="tabpanel">
                    <div class="row">
                        <div class="col-md-12">
                            <table class="table table-striped- table-bordered table-hover table-checkable dataTable no-footer dtr-inline detailGrid" id="m_table_1" role="grid" aria-describedby="kt_table_1_info">
                                <thead style="background-color: #28469c; color: #ffffff">
                                    <tr role="row">
                                        <th width="">Description</th>
                                        <th width="">Attachments</th>
                                        <th width="10"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model.YarnInspectionAttachments.Count > 0)
                                    {
                                        Int32 j = 0;
                                        foreach (var item in Model.YarnInspectionAttachments)
                                        {
                                            <tr role="row" class="odd">
                                                <td class="sorting_1">
                                                    @Html.TextBox("det[" + j + "][FileDescription]", "", new { @class = "form-control", @Value = item.FileDescription })
                                                </td>
                                                <td class="sorting_1">
                                                    @Html.TextBox("files", "", new { @class = "form-control", id = "file", @type = "file" })
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(item.FileName))
                                                    {
                                                        <a href="~/File/@item.">Download</a>}
                                                </td>
                                            </tr>
                                            j++;
                                        }
                                    }
                                    else
                                    {
                                        <tr role="row" class="odd">
                                            <td class="sorting_1">
                                                @Html.TextBox("det[0][FileDescription]", "", new { @class = "form-control" })
                                            </td>
                                            <td class="sorting_1">
                                                @Html.TextBox("files", "", new { @class = "form-control", id = "file", @type = "file" })
                                            </td>
                                        </tr>
                                    }

                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    </div>
    </div>
    <div class="modal fade" id="IndentLookUpModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    </div>
    <script src="~/Content/VigorJs/IndentDomestic/_CreateOrUpdate.js"></script>*@