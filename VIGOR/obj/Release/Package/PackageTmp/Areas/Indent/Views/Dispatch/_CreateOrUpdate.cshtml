@using ERP.Core.Enums
@model ERP.Core.Models.Indenting.IndentDomestic.IndDomesticDispatchSchedule
<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">@ViewBag.Title</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "IndDomesticDispatchScheduleForm" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(a => a.Id);
                @Html.HiddenFor(a => a.IsDelayed)
                <div class="m-portlet__body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class=" form-group row">
                                <div class="col-md-12">
                                    <label>Type:</label>
                                    @Html.DropDownListFor(a => a.TypeOfTransaction, Enum.GetValues(typeof(ERP.Common.DispatchType)).Cast<ERP.Common.DispatchType>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((char)x).ToString() }), new { @class = "form-control",@id= "DispatchTypeDrop", onchange = "DispatchTypeChanged()"  })

                                    @Html.ValidationMessageFor(model => model.TypeOfTransaction, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                      
                        <div class="col-md-4">
                            <div class="form-group ">
                                <div class="col-md-12">
                                    <label>Contract No:</label>
                                    <input name="IndentKey" type="text" class="form-control" value="@ViewBag.IndentKey" readonly="readonly" />
                                    @Html.HiddenFor(a => a.IndentId)

                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row">
                                <div class="col-lg-3">
                                    <label>Tran No:</label>
                                    @Html.TextBoxFor(a => a.Id, new { @class = "form-control", disabled = "disabled" })
                                </div>
                                <div class="col-lg-4">
                                    <label>Dated:</label>
                                    @Html.TextBoxFor(a => a.TransDate, new { @class = "form-control", type = "Date", Value = Model.TransDate.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessageFor(model => model.TransDate, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-5">
                                    <label>Shipment Validity:</label>
                                    @Html.HiddenFor(a => a.ContractedDeliveryDate)
                                    @Html.TextBoxFor(a => a.ContractedDeliveryDate, null, new { @class = "form-control", type = "Date", disabled = "disabled", Value = Model.ContractedDeliveryDate.ToString("yyyy-MM-dd") })
                                    @Html.ValidationMessageFor(model => model.ContractedDeliveryDate, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-12">
                                    <label>Commodity:</label>
                                    @Html.DropDownListFor(a => a.CommodityId, (SelectList)ViewBag.CommodityId, new { @class = "form-control ", @id = "drop", onchange = "CommSelectionChanged()" })
                                    @Html.ValidationMessageFor(model => model.CommodityId, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-4">
                                    <label>Quantity:</label>
                                    @Html.TextBoxFor(a => a.Quantity, new { @class = "form-control", @type = "number", min = "0" })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-lg-8">
                                    <label>UOS:</label>
                                    <input type="text" class="form-control" id="UoS" disabled="disabled" value="@ViewBag.UOS" />
                                    @Html.Hidden("UnitOsSaleID",new{id= "UnitOsSaleID" })
                                    @Html.Hidden("Rate",new{id= "Rate" })

                                </div>
                                <div class="col-lg-12">
                                    <label>Transporter:</label>
                                    @Html.DropDownListFor(a => a.GoodsFarwarderID, new SelectList(new ERP.Infrastructure.Repositories.Indenting.GoodsForwarderRepository().GetAllGoodsForwarder(), "Id", "Name"),"", new { @class = "form-control " })
                                    @Html.ValidationMessageFor(model => model.GoodsFarwarderID, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-6">
                                    <label>Builty No:</label>
                                    @Html.TextBoxFor(a => a.BiltyNo, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BiltyNo, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-6">
                                    <label>Vehicle No:</label>
                                    @Html.TextBoxFor(a => a.VehicleNo, null, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.VehicleNo, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-12">
                                    <label>Remarks:</label>
                                    @Html.TextAreaFor(a => a.Remarks, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group row">
                                <div class="col-lg-12">

                                    <h6>Salestax Information</h6>
                                </div>
                                <div class="col-lg-4" style="padding-top:15px;">
                                    <div class="m-checkbox-list">
                                            @if (Model.Id > 0)
                                            {
                                                <label class="m-checkbox">
                                                    @Html.CheckBoxFor(a => a.IsReceivedStinv)Salestax Invoice
                                                    Received
                                                    <span></span>
                                                </label>
                                            }
                                            else
                                            {
                                                <label class="m-checkbox">
                                                    @Html.CheckBoxFor(a => a.IsReceivedStinv,new{@class="form-control",@readonly= "readonly" })Salestax Invoice
                                                    Received
                                                    <span></span>
                                                </label>
                                            }
                                    </div>
                                </div>
                                <div class="col-lg-5">
                                    <label>Dated:</label>
                                    @Html.TextBoxFor(a => a.SalestaxInvoiceDate, null, Model.Id > 0 ? (object)new { @class = "form-control ", required = "required", type = "date", Value = Model.SalestaxInvoiceDate } : new { @class = "form-control ", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.SalestaxInvoiceDate, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-3">
                                    <label>Invoice No:</label>
                                    @Html.TextBoxFor(a => a.SalestaxInvoiceNo,  Model.Id > 0 ? (object)new { @class = "form-control ", required = "required" } : new { @class = "form-control ", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.SalestaxInvoiceNo, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-12" style="padding-top:10px; padding-bottom:10px;">
                                    <h6>Dispatch Delay Reason</h6>
                                </div>
                                <div class="col-lg-12">
                                    <label>Delay Category:</label>
                                    @Html.DropDownListFor(a => a.DelayShipmentReason, new SelectList(new ERP.Infrastructure.Repositories.Indenting.IndDelayShipmentReasonRepository().GetAllIndDelayShipmentReasons(), "Id", "Description"), Model.IsDelayed == "Y" ? (object)new { @class = "form-control ",@id="DelayCat", required = "required" } : new { @class = "form-control ", @id = "DelayCat", @disabled = "disabled" })
                                    @Html.ValidationMessageFor(model => model.DelayShipmentReason, "", new { @class = "text-danger" })

                                </div>
                                <div class="col-lg-12">
                                    <label>Delay Remarks:</label>
                                    @Html.TextAreaFor(a => a.DelayShipmentReasonDescription, Model.IsDelayed == "Y" ? (object)new { @class = "form-control ", @id = "DelayRem", required = "required" } : new { @class = "form-control ", @id = "DelayRem", })
                                    @Html.ValidationMessageFor(model => model.DelayShipmentReasonDescription, "", new { @class = "text-danger" })

                                </div>
                                <div class="clearfix"></div>

                            </div>
                        </div>

                    </div>

                </div>
            }
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-success" onclick="SubmitIndDomesticDispatchScheduleForm()">
                <span>
                    <i class="fa fa-save"></i>
                    <span>Save</span>
                </span>
            </button>
            <button type="button" class="btn btn-warning" data-dismiss="modal">
                <span>
                    <i class="flaticon-cancel"></i>
                    <span>Cancel</span>
                </span>
            </button>
        </div>
    </div>
</div>
<script src="~/Content/VigorJs/Dispatch/_CreateOrUpdate.js"></script>